State 1 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 pri_exp: NIL
    3        | INT
    4        | STRING
    5        | ID LPAREN function-args RPAREN
    6        | lvalue
    7        | MINUS pri_exp
    8        | exps

    9 exps: LPAREN exp_seq RPAREN

   10 exp_seq: %empty
   11        | exp_list

   12 exp_list: exp
   13         | exp_list SEMICOLON exp

   14 exp: ID LBRACK exp RBRACK OF exp
   15    | ID LBRACE record-args RBRACE
   16    | lvalue ASSIGN exp
   17    | IF exp THEN exp ifelse
   18    | WHILE exp DO exp
   19    | FOR ID ASSIGN exp TO exp DO exp
   20    | BREAK
   21    | LET decs IN exps END
   22    | or_exp

   23 or_exp: and_exp
   24       | or_exp OR and_exp

   25 and_exp: rel_exp
   26        | and_exp AND rel_exp

   27 rel_exp: add_exp
   28        | add_exp GT add_exp
   29        | add_exp LT add_exp
   30        | add_exp NEQ add_exp
   31        | add_exp EQ add_exp
   32        | add_exp LE add_exp
   33        | add_exp GE add_exp

   34 add_exp: times_exp
   35        | add_exp PLUS times_exp
   36        | add_exp MINUS times_exp

   37 times_exp: pri_exp
   38          | times_exp TIMES pri_exp
   39          | times_exp DIVIDE pri_exp

   40 record-args: ID EQ exp
   41            | ID EQ exp COMMA record-args

   42 lvalue: ID
   43       | lvalue DOT ID
   44       | lvalue LBRACK exp RBRACK

   45 function-args: %empty
   46              | exp
   47              | exp COMMA function-args

   48 ifelse: %empty
   49       | ELSE exp

   50 decs: dec
   51     | dec decs

   52 dec: TYPE ID ASSIGN type
   53    | vardec
   54    | FUNCTION ID LPAREN type-fields RPAREN type-dec EQ exp

   55 type: ID
   56     | LBRACE type-fields RBRACE
   57     | ARRAY OF ID

   58 type-fields: %empty
   59            | ID COLON ID
   60            | ID COLON ID COMMA type-fields

   61 vardec: VAR ID type-dec ASSIGN exp

   62 type-dec: %empty
   63         | COLON ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 5 14 15 19 40 41 42 43 52 54 55 57 59 60 61 63
STRING (259) 4
INT (260) 3
COMMA (261) 41 47 60
COLON (262) 59 60 63
SEMICOLON (263) 13
LPAREN (264) 5 9 54
RPAREN (265) 5 9 54
LBRACK (266) 14 44
RBRACK (267) 14 44
LBRACE (268) 15 56
RBRACE (269) 15 56
DOT (270) 43
PLUS (271) 35
MINUS (272) 7 36
TIMES (273) 38
DIVIDE (274) 39
EQ (275) 31 40 41 54
NEQ (276) 30
LT (277) 29
LE (278) 32
GT (279) 28
GE (280) 33
AND (281) 26
OR (282) 24
ASSIGN (283) 16 19 52 61
ARRAY (284) 57
IF (285) 17
THEN (286) 17
ELSE (287) 49
WHILE (288) 18
FOR (289) 19
TO (290) 19
DO (291) 18 19
LET (292) 21
IN (293) 21
END (294) 21
OF (295) 14 57
BREAK (296) 20
NIL (297) 2
FUNCTION (298) 54
VAR (299) 61
TYPE (300) 52


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
pri_exp (48)
    on left: 2 3 4 5 6 7 8, on right: 7 37 38 39
exps (49)
    on left: 9, on right: 8 21
exp_seq (50)
    on left: 10 11, on right: 9
exp_list (51)
    on left: 12 13, on right: 11 13
exp (52)
    on left: 14 15 16 17 18 19 20 21 22, on right: 1 12 13 14 16 17
    18 19 40 41 44 46 47 49 54 61
or_exp (53)
    on left: 23 24, on right: 22 24
and_exp (54)
    on left: 25 26, on right: 23 24 26
rel_exp (55)
    on left: 27 28 29 30 31 32 33, on right: 25 26
add_exp (56)
    on left: 34 35 36, on right: 27 28 29 30 31 32 33 35 36
times_exp (57)
    on left: 37 38 39, on right: 34 35 36 38 39
record-args (58)
    on left: 40 41, on right: 15 41
lvalue (59)
    on left: 42 43 44, on right: 6 16 43 44
function-args (60)
    on left: 45 46 47, on right: 5 47
ifelse (61)
    on left: 48 49, on right: 17
decs (62)
    on left: 50 51, on right: 21 51
dec (63)
    on left: 52 53 54, on right: 50 51
type (64)
    on left: 55 56 57, on right: 52
type-fields (65)
    on left: 58 59 60, on right: 54 56 60
vardec (66)
    on left: 61, on right: 53
type-dec (67)
    on left: 62 63, on right: 54 61


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    go to state 12
    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 15
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 1

    5 pri_exp: ID . LPAREN function-args RPAREN
   14 exp: ID . LBRACK exp RBRACK OF exp
   15    | ID . LBRACE record-args RBRACE
   42 lvalue: ID .

    LPAREN  shift, and go to state 22
    LBRACK  shift, and go to state 23
    LBRACE  shift, and go to state 24

    LBRACK    [reduce using rule 42 (lvalue)]
    $default  reduce using rule 42 (lvalue)


State 2

    4 pri_exp: STRING .

    $default  reduce using rule 4 (pri_exp)


State 3

    3 pri_exp: INT .

    $default  reduce using rule 3 (pri_exp)


State 4

    9 exps: LPAREN . exp_seq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 10 (exp_seq)

    pri_exp    go to state 13
    exps       go to state 14
    exp_seq    go to state 25
    exp_list   go to state 26
    exp        go to state 27
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 5

    7 pri_exp: MINUS . pri_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp  go to state 29
    exps     go to state 14
    lvalue   go to state 30


State 6

   17 exp: IF . exp THEN exp ifelse

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 31
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 7

   18 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 32
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 8

   19 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 33


State 9

   21 exp: LET . decs IN exps END

    FUNCTION  shift, and go to state 34
    VAR       shift, and go to state 35
    TYPE      shift, and go to state 36

    decs    go to state 37
    dec     go to state 38
    vardec  go to state 39


State 10

   20 exp: BREAK .

    $default  reduce using rule 20 (exp)


State 11

    2 pri_exp: NIL .

    $default  reduce using rule 2 (pri_exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 40


State 13

   37 times_exp: pri_exp .

    $default  reduce using rule 37 (times_exp)


State 14

    8 pri_exp: exps .

    $default  reduce using rule 8 (pri_exp)


State 15

    1 program: exp .

    $default  reduce using rule 1 (program)


State 16

   22 exp: or_exp .
   24 or_exp: or_exp . OR and_exp

    OR  shift, and go to state 41

    $default  reduce using rule 22 (exp)


State 17

   23 or_exp: and_exp .
   26 and_exp: and_exp . AND rel_exp

    AND  shift, and go to state 42

    $default  reduce using rule 23 (or_exp)


State 18

   25 and_exp: rel_exp .

    $default  reduce using rule 25 (and_exp)


State 19

   27 rel_exp: add_exp .
   28        | add_exp . GT add_exp
   29        | add_exp . LT add_exp
   30        | add_exp . NEQ add_exp
   31        | add_exp . EQ add_exp
   32        | add_exp . LE add_exp
   33        | add_exp . GE add_exp
   35 add_exp: add_exp . PLUS times_exp
   36        | add_exp . MINUS times_exp

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44
    EQ     shift, and go to state 45
    NEQ    shift, and go to state 46
    LT     shift, and go to state 47
    LE     shift, and go to state 48
    GT     shift, and go to state 49
    GE     shift, and go to state 50

    $default  reduce using rule 27 (rel_exp)


State 20

   34 add_exp: times_exp .
   38 times_exp: times_exp . TIMES pri_exp
   39          | times_exp . DIVIDE pri_exp

    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 34 (add_exp)


State 21

    6 pri_exp: lvalue .
   16 exp: lvalue . ASSIGN exp
   43 lvalue: lvalue . DOT ID
   44       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 53
    DOT     shift, and go to state 54
    ASSIGN  shift, and go to state 55

    $default  reduce using rule 6 (pri_exp)


State 22

    5 pri_exp: ID LPAREN . function-args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 45 (function-args)

    pri_exp        go to state 13
    exps           go to state 14
    exp            go to state 56
    or_exp         go to state 16
    and_exp        go to state 17
    rel_exp        go to state 18
    add_exp        go to state 19
    times_exp      go to state 20
    lvalue         go to state 21
    function-args  go to state 57


State 23

   14 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 58
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 24

   15 exp: ID LBRACE . record-args RBRACE

    ID  shift, and go to state 59

    record-args  go to state 60


State 25

    9 exps: LPAREN exp_seq . RPAREN

    RPAREN  shift, and go to state 61


State 26

   11 exp_seq: exp_list .
   13 exp_list: exp_list . SEMICOLON exp

    SEMICOLON  shift, and go to state 62

    $default  reduce using rule 11 (exp_seq)


State 27

   12 exp_list: exp .

    $default  reduce using rule 12 (exp_list)


State 28

    5 pri_exp: ID . LPAREN function-args RPAREN
   42 lvalue: ID .

    LPAREN  shift, and go to state 22

    $default  reduce using rule 42 (lvalue)


State 29

    7 pri_exp: MINUS pri_exp .

    $default  reduce using rule 7 (pri_exp)


State 30

    6 pri_exp: lvalue .
   43 lvalue: lvalue . DOT ID
   44       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 53
    DOT     shift, and go to state 54

    $default  reduce using rule 6 (pri_exp)


State 31

   17 exp: IF exp . THEN exp ifelse

    THEN  shift, and go to state 63


State 32

   18 exp: WHILE exp . DO exp

    DO  shift, and go to state 64


State 33

   19 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 65


State 34

   54 dec: FUNCTION . ID LPAREN type-fields RPAREN type-dec EQ exp

    ID  shift, and go to state 66


State 35

   61 vardec: VAR . ID type-dec ASSIGN exp

    ID  shift, and go to state 67


State 36

   52 dec: TYPE . ID ASSIGN type

    ID  shift, and go to state 68


State 37

   21 exp: LET decs . IN exps END

    IN  shift, and go to state 69


State 38

   50 decs: dec .
   51     | dec . decs

    FUNCTION  shift, and go to state 34
    VAR       shift, and go to state 35
    TYPE      shift, and go to state 36

    $default  reduce using rule 50 (decs)

    decs    go to state 70
    dec     go to state 38
    vardec  go to state 39


State 39

   53 dec: vardec .

    $default  reduce using rule 53 (dec)


State 40

    0 $accept: program $end .

    $default  accept


State 41

   24 or_exp: or_exp OR . and_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    and_exp    go to state 71
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 30


State 42

   26 and_exp: and_exp AND . rel_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    rel_exp    go to state 72
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 30


State 43

   35 add_exp: add_exp PLUS . times_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    times_exp  go to state 73
    lvalue     go to state 30


State 44

   36 add_exp: add_exp MINUS . times_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    times_exp  go to state 74
    lvalue     go to state 30


State 45

   31 rel_exp: add_exp EQ . add_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    add_exp    go to state 75
    times_exp  go to state 20
    lvalue     go to state 30


State 46

   30 rel_exp: add_exp NEQ . add_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    add_exp    go to state 76
    times_exp  go to state 20
    lvalue     go to state 30


State 47

   29 rel_exp: add_exp LT . add_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    add_exp    go to state 77
    times_exp  go to state 20
    lvalue     go to state 30


State 48

   32 rel_exp: add_exp LE . add_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    add_exp    go to state 78
    times_exp  go to state 20
    lvalue     go to state 30


State 49

   28 rel_exp: add_exp GT . add_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    add_exp    go to state 79
    times_exp  go to state 20
    lvalue     go to state 30


State 50

   33 rel_exp: add_exp GE . add_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    add_exp    go to state 80
    times_exp  go to state 20
    lvalue     go to state 30


State 51

   38 times_exp: times_exp TIMES . pri_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp  go to state 81
    exps     go to state 14
    lvalue   go to state 30


State 52

   39 times_exp: times_exp DIVIDE . pri_exp

    ID      shift, and go to state 28
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    NIL     shift, and go to state 11

    pri_exp  go to state 82
    exps     go to state 14
    lvalue   go to state 30


State 53

   44 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 83
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 54

   43 lvalue: lvalue DOT . ID

    ID  shift, and go to state 84


State 55

   16 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 85
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 56

   46 function-args: exp .
   47              | exp . COMMA function-args

    COMMA  shift, and go to state 86

    $default  reduce using rule 46 (function-args)


State 57

    5 pri_exp: ID LPAREN function-args . RPAREN

    RPAREN  shift, and go to state 87


State 58

   14 exp: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 88


State 59

   40 record-args: ID . EQ exp
   41            | ID . EQ exp COMMA record-args

    EQ  shift, and go to state 89


State 60

   15 exp: ID LBRACE record-args . RBRACE

    RBRACE  shift, and go to state 90


State 61

    9 exps: LPAREN exp_seq RPAREN .

    $default  reduce using rule 9 (exps)


State 62

   13 exp_list: exp_list SEMICOLON . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 91
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 63

   17 exp: IF exp THEN . exp ifelse

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 92
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 64

   18 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 93
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 65

   19 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 94
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 66

   54 dec: FUNCTION ID . LPAREN type-fields RPAREN type-dec EQ exp

    LPAREN  shift, and go to state 95


State 67

   61 vardec: VAR ID . type-dec ASSIGN exp

    COLON  shift, and go to state 96

    $default  reduce using rule 62 (type-dec)

    type-dec  go to state 97


State 68

   52 dec: TYPE ID . ASSIGN type

    ASSIGN  shift, and go to state 98


State 69

   21 exp: LET decs IN . exps END

    LPAREN  shift, and go to state 4

    exps  go to state 99


State 70

   51 decs: dec decs .

    $default  reduce using rule 51 (decs)


State 71

   24 or_exp: or_exp OR and_exp .
   26 and_exp: and_exp . AND rel_exp

    AND  shift, and go to state 42

    $default  reduce using rule 24 (or_exp)


State 72

   26 and_exp: and_exp AND rel_exp .

    $default  reduce using rule 26 (and_exp)


State 73

   35 add_exp: add_exp PLUS times_exp .
   38 times_exp: times_exp . TIMES pri_exp
   39          | times_exp . DIVIDE pri_exp

    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 35 (add_exp)


State 74

   36 add_exp: add_exp MINUS times_exp .
   38 times_exp: times_exp . TIMES pri_exp
   39          | times_exp . DIVIDE pri_exp

    TIMES   shift, and go to state 51
    DIVIDE  shift, and go to state 52

    $default  reduce using rule 36 (add_exp)


State 75

   31 rel_exp: add_exp EQ add_exp .
   35 add_exp: add_exp . PLUS times_exp
   36        | add_exp . MINUS times_exp

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44

    $default  reduce using rule 31 (rel_exp)


State 76

   30 rel_exp: add_exp NEQ add_exp .
   35 add_exp: add_exp . PLUS times_exp
   36        | add_exp . MINUS times_exp

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44

    $default  reduce using rule 30 (rel_exp)


State 77

   29 rel_exp: add_exp LT add_exp .
   35 add_exp: add_exp . PLUS times_exp
   36        | add_exp . MINUS times_exp

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44

    $default  reduce using rule 29 (rel_exp)


State 78

   32 rel_exp: add_exp LE add_exp .
   35 add_exp: add_exp . PLUS times_exp
   36        | add_exp . MINUS times_exp

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44

    $default  reduce using rule 32 (rel_exp)


State 79

   28 rel_exp: add_exp GT add_exp .
   35 add_exp: add_exp . PLUS times_exp
   36        | add_exp . MINUS times_exp

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44

    $default  reduce using rule 28 (rel_exp)


State 80

   33 rel_exp: add_exp GE add_exp .
   35 add_exp: add_exp . PLUS times_exp
   36        | add_exp . MINUS times_exp

    PLUS   shift, and go to state 43
    MINUS  shift, and go to state 44

    $default  reduce using rule 33 (rel_exp)


State 81

   38 times_exp: times_exp TIMES pri_exp .

    $default  reduce using rule 38 (times_exp)


State 82

   39 times_exp: times_exp DIVIDE pri_exp .

    $default  reduce using rule 39 (times_exp)


State 83

   44 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 100


State 84

   43 lvalue: lvalue DOT ID .

    $default  reduce using rule 43 (lvalue)


State 85

   16 exp: lvalue ASSIGN exp .

    $default  reduce using rule 16 (exp)


State 86

   47 function-args: exp COMMA . function-args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 45 (function-args)

    pri_exp        go to state 13
    exps           go to state 14
    exp            go to state 56
    or_exp         go to state 16
    and_exp        go to state 17
    rel_exp        go to state 18
    add_exp        go to state 19
    times_exp      go to state 20
    lvalue         go to state 21
    function-args  go to state 101


State 87

    5 pri_exp: ID LPAREN function-args RPAREN .

    $default  reduce using rule 5 (pri_exp)


State 88

   14 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 102


State 89

   40 record-args: ID EQ . exp
   41            | ID EQ . exp COMMA record-args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 103
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 90

   15 exp: ID LBRACE record-args RBRACE .

    $default  reduce using rule 15 (exp)


State 91

   13 exp_list: exp_list SEMICOLON exp .

    $default  reduce using rule 13 (exp_list)


State 92

   17 exp: IF exp THEN exp . ifelse

    ELSE  shift, and go to state 104

    ELSE      [reduce using rule 48 (ifelse)]
    $default  reduce using rule 48 (ifelse)

    ifelse  go to state 105


State 93

   18 exp: WHILE exp DO exp .

    $default  reduce using rule 18 (exp)


State 94

   19 exp: FOR ID ASSIGN exp . TO exp DO exp

    TO  shift, and go to state 106


State 95

   54 dec: FUNCTION ID LPAREN . type-fields RPAREN type-dec EQ exp

    ID  shift, and go to state 107

    $default  reduce using rule 58 (type-fields)

    type-fields  go to state 108


State 96

   63 type-dec: COLON . ID

    ID  shift, and go to state 109


State 97

   61 vardec: VAR ID type-dec . ASSIGN exp

    ASSIGN  shift, and go to state 110


State 98

   52 dec: TYPE ID ASSIGN . type

    ID      shift, and go to state 111
    LBRACE  shift, and go to state 112
    ARRAY   shift, and go to state 113

    type  go to state 114


State 99

   21 exp: LET decs IN exps . END

    END  shift, and go to state 115


State 100

   44 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 44 (lvalue)


State 101

   47 function-args: exp COMMA function-args .

    $default  reduce using rule 47 (function-args)


State 102

   14 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 116
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 103

   40 record-args: ID EQ exp .
   41            | ID EQ exp . COMMA record-args

    COMMA  shift, and go to state 117

    $default  reduce using rule 40 (record-args)


State 104

   49 ifelse: ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 118
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 105

   17 exp: IF exp THEN exp ifelse .

    $default  reduce using rule 17 (exp)


State 106

   19 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 119
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 107

   59 type-fields: ID . COLON ID
   60            | ID . COLON ID COMMA type-fields

    COLON  shift, and go to state 120


State 108

   54 dec: FUNCTION ID LPAREN type-fields . RPAREN type-dec EQ exp

    RPAREN  shift, and go to state 121


State 109

   63 type-dec: COLON ID .

    $default  reduce using rule 63 (type-dec)


State 110

   61 vardec: VAR ID type-dec ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 122
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 111

   55 type: ID .

    $default  reduce using rule 55 (type)


State 112

   56 type: LBRACE . type-fields RBRACE

    ID  shift, and go to state 107

    $default  reduce using rule 58 (type-fields)

    type-fields  go to state 123


State 113

   57 type: ARRAY . OF ID

    OF  shift, and go to state 124


State 114

   52 dec: TYPE ID ASSIGN type .

    $default  reduce using rule 52 (dec)


State 115

   21 exp: LET decs IN exps END .

    $default  reduce using rule 21 (exp)


State 116

   14 exp: ID LBRACK exp RBRACK OF exp .

    $default  reduce using rule 14 (exp)


State 117

   41 record-args: ID EQ exp COMMA . record-args

    ID  shift, and go to state 59

    record-args  go to state 125


State 118

   49 ifelse: ELSE exp .

    $default  reduce using rule 49 (ifelse)


State 119

   19 exp: FOR ID ASSIGN exp TO exp . DO exp

    DO  shift, and go to state 126


State 120

   59 type-fields: ID COLON . ID
   60            | ID COLON . ID COMMA type-fields

    ID  shift, and go to state 127


State 121

   54 dec: FUNCTION ID LPAREN type-fields RPAREN . type-dec EQ exp

    COLON  shift, and go to state 96

    $default  reduce using rule 62 (type-dec)

    type-dec  go to state 128


State 122

   61 vardec: VAR ID type-dec ASSIGN exp .

    $default  reduce using rule 61 (vardec)


State 123

   56 type: LBRACE type-fields . RBRACE

    RBRACE  shift, and go to state 129


State 124

   57 type: ARRAY OF . ID

    ID  shift, and go to state 130


State 125

   41 record-args: ID EQ exp COMMA record-args .

    $default  reduce using rule 41 (record-args)


State 126

   19 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 131
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 127

   59 type-fields: ID COLON ID .
   60            | ID COLON ID . COMMA type-fields

    COMMA  shift, and go to state 132

    $default  reduce using rule 59 (type-fields)


State 128

   54 dec: FUNCTION ID LPAREN type-fields RPAREN type-dec . EQ exp

    EQ  shift, and go to state 133


State 129

   56 type: LBRACE type-fields RBRACE .

    $default  reduce using rule 56 (type)


State 130

   57 type: ARRAY OF ID .

    $default  reduce using rule 57 (type)


State 131

   19 exp: FOR ID ASSIGN exp TO exp DO exp .

    $default  reduce using rule 19 (exp)


State 132

   60 type-fields: ID COLON ID COMMA . type-fields

    ID  shift, and go to state 107

    $default  reduce using rule 58 (type-fields)

    type-fields  go to state 134


State 133

   54 dec: FUNCTION ID LPAREN type-fields RPAREN type-dec EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    pri_exp    go to state 13
    exps       go to state 14
    exp        go to state 135
    or_exp     go to state 16
    and_exp    go to state 17
    rel_exp    go to state 18
    add_exp    go to state 19
    times_exp  go to state 20
    lvalue     go to state 21


State 134

   60 type-fields: ID COLON ID COMMA type-fields .

    $default  reduce using rule 60 (type-fields)


State 135

   54 dec: FUNCTION ID LPAREN type-fields RPAREN type-dec EQ exp .

    $default  reduce using rule 54 (dec)
